{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getFormatedTime","time","toString","length","Clock","state","now","Date","timerId","this","window","setInterval","updatedDate","console","info","getHours","getMinutes","getSeconds","setState","prevProps","clockName","props","debug","clearInterval","className","toLocaleTimeString","React","Component","getRandomName","value","slice","App","hasClock","handleContextMenu","event","preventDefault","updateClockName","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAgBC,GACvB,OAAkC,IAA3BA,EAAKC,WAAWC,OAAeF,EAAKC,WAApC,WAAqDD,GAGvD,IAAMG,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAAIC,MAFb,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAc,IAAIL,KAGxBM,QAAQC,KAAR,UAAgBd,EAAgBY,EAAYG,YAA5C,YAA2Df,EAAgBY,EAAYI,cAAvF,YAAwGhB,EAAgBY,EAAYK,gBAEpI,EAAKC,SAAS,CAAEZ,IAAKM,MACpB,OAfP,gCAkBE,SAAmBO,GACbA,EAAUC,YAAcX,KAAKY,MAAMD,WAErCP,QAAQS,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDX,KAAKY,MAAMD,cArBzE,kCAyBE,WACEV,OAAOa,cAAcd,KAAKD,WA1B9B,oBA6BE,WACE,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKY,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGf,KAAKJ,MAAMC,IAAImB,8BAvC1B,GAA2BC,IAAMC,WCTjC,SAASC,IACP,IAAMC,EAAQtB,KAAKD,MAAMJ,WAAW4B,OAAO,GAE3C,MAAM,SAAN,OAAgBD,GAQX,IAAME,EAAb,4MACE1B,MAAyB,CACvBe,UAAW,UACXY,UAAU,GAHd,EAMExB,QAAU,EANZ,EAsBEyB,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKjB,SAAS,CAAEc,UAAU,KAzB9B,EA4BEI,gBAAkB,WAChB,EAAKlB,SAAS,CAAEE,UAAWQ,OA7B/B,EAgCES,YAAc,WACZ,EAAKnB,SAAS,CAAEc,UAAU,KAjC9B,uDAQE,WACEvB,KAAKD,QAAUE,OAAOC,YAAYF,KAAK2B,gBAAiB,MAExDE,SAASC,iBAAiB,QAAS9B,KAAK4B,aACxCC,SAASC,iBAAiB,cAAe9B,KAAKwB,qBAZlD,kCAeE,WACEvB,OAAOa,cAAcd,KAAKD,SAE1B8B,SAASE,oBAAoB,QAAS/B,KAAK4B,aAC3CC,SAASE,oBAAoB,cAAe/B,KAAKwB,qBAnBrD,oBAoCE,WACE,MAAgCxB,KAAKJ,MAA7Be,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OAEE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WA5CvC,GAAyBM,IAAMC,WCb/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.643ff406.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  now: Date;\n};\n\nfunction getFormatedTime(time: number): string {\n  return time.toString().length === 2 ? time.toString() : `0${time}`;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    now: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const updatedDate = new Date();\n\n      // eslint-disable-next-line no-console\n      console.info(`${getFormatedTime(updatedDate.getHours())}:${getFormatedTime(updatedDate.getMinutes())}:${getFormatedTime(updatedDate.getSeconds())}`);\n\n      this.setState({ now: updatedDate });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.now.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  updateClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}